START TRANSACTION;

SELECT IF(min(issue_id)>0, 0, min(issue_id)) - 1 FROM old_issues INTO @ISSUE_ID;

SET @BORROWERNUMBER=NULL;
SELECT borrowernumber FROM borrowers WHERE cardnumber = [% cardnumber %] OR [% cardnumber %] IS NULL AND (surname = [% surname %] AND firstname = [% firstname %] AND branchcode = [% branchcode %] AND dateenrolled = [% dateenrolled %]) LIMIT 1 INTO @BORROWERNUMBER;


CREATE TEMPORARY TABLE bm_tmp_biblionumbers (biblionumber INT(11) PRIMARY KEY);

INSERT INTO bm_tmp_biblionumbers
  SELECT biblionumber FROM bm_biblio_identification     WHERE CONCAT(marc003, marc001) = [% title_no %]
UNION
  SELECT biblionumber FROM bm_merged_records        WHERE CONCAT(marc003, marc001) = [% title_no %];

SELECT IF(@BORROWERNUMBER IS NULL, [% branchcode %], (SELECT branchcode FROM borrowers WHERE borrowernumber = @BORROWERNUMBER)) INTO @BRANCHCODE;

SET @HAS_MATCHING_ITEM_CALLNUMBER = EXISTS (SELECT * FROM items WHERE EXISTS (SELECT * FROM bm_tmp_biblionumbers WHERE  items.biblionumber=bm_tmp_biblionumbers.biblionumber) AND itemcallnumber = [% callnumber %] AND homebranch = @BRANCHCODE);

SET @HAS_MATCHING_ITEM = EXISTS (SELECT * FROM items WHERE EXISTS (SELECT * FROM bm_tmp_biblionumbers WHERE  items.biblionumber=bm_tmp_biblionumbers.biblionumber) AND homebranch = @BRANCHCODE);

SELECT itemnumber FROM items WHERE @HAS_MATCHING_ITEM AND EXISTS (SELECT * FROM bm_tmp_biblionumbers
  WHERE items.biblionumber=bm_tmp_biblionumbers.biblionumber) AND
    (NOT @HAS_MATCHING_ITEM_CALLNUMBER OR itemcallnumber = [% callnumber %]) AND
    (NOT @HAS_MATCHING_ITEM OR homebranch = @BRANCHCODE) LIMIT 1 INTO @ITEMNUMBER;

INSERT INTO old_issues (issue_id, borrowernumber, itemnumber, date_due, branchcode, returndate, lastreneweddate, renewals, auto_renew, auto_renew_error, timestamp, issuedate, onsite_checkout, note, notedate) VALUES
 (@ISSUE_ID, @BORROWERNUMBER, @ITEMNUMBER, NULL, @BRANCHCODE, [% returndate %], NULL, NULL, NULL, NULL, [% timestamp %], NULL, 0, NULL, NULL);

DROP TABLE bm_tmp_biblionumbers;

COMMIT;