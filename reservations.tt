
START TRANSACTION;

SET @BIBLIONUMBER=NULL;
SET @ITEMNUMBER=NULL;
SET @BORROWERNUMBER=NULL;

SELECT biblionumber FROM
(
 [% IF !record_match_field && titleno && titleno != "''" && titleno != "NULL" || record_match_field && record_match_value && record_match_value != "''" && record_match_value != "NULL" %]
 SELECT biblionumber FROM k_biblio_identification WHERE
 [% IF record_match_field %]
    `[% record_match_field %]` = [% record_match_value %]
 [% ELSE %]
    titleno = [% titleno %] AND batch = [% batch %]
 [% END %]
UNION
 SELECT biblionumber FROM k_merged_records WHERE
 [% IF record_match_field %]
    `[% record_match_field %]` = [% record_match_value %]
 [% ELSE %]
    titleno = [% titleno %] AND batch = [% batch %]
UNION
 SELECT biblionumber FROM k_biblio_identification
 WHERE marc001 = [% titleno %] AND batch = [% batch %]
UNION
 SELECT biblionumber FROM k_merged_records
 WHERE marc001 = [% titleno %] AND batch = [% batch %]
 [% END %]
 [% ELSIF item_barcode %]
 SELECT biblionumber FROM items WHERE barcode = [% item_barcode %]
 [% END %]
) AS T LIMIT 1 INTO @BIBLIONUMBER;

SELECT [% IF original_item_id != 'NULL' %] itemnumber FROM k_items_idmap WHERE original_id = [% original_item_id %] AND batch = [% batch %] [% ELSIF item_barcode && item_barcode != 'NULL' %] itemnumber FROM items WHERE barcode = [% item_barcode %] [% ELSE %] NULL [% END %] INTO @ITEMNUMBER;
SELECT itemcallnumber FROM items WHERE itemnumber = @ITEMNUMBER INTO @ITEMCALLNUMBER;
SELECT EXISTS (SELECT * FROM items JOIN hold_fill_targets using(itemnumber) WHERE itemnumber = @ITEMNUMBER) INTO @ALREADYRESERVED;

[% IF IdBorrower %]
SELECT borrowernumber FROM k_borrower_idmap WHERE original_id = [% IdBorrower %] AND batch = [% batch %] INTO @BORROWERNUMBER;
[% ELSIF borrower_barcode %]
SELECT borrowernumber FROM borrowers WHERE cardnumber = [% borrower_barcode %] INTO @BORROWERNUMBER;
[% ELSE %]
SELECT NULL FROM DUAL INTO @BORROWERNUMBER;
[% END %]

SET @INSERT_RESERVE = @BIBLIONUMBER IS NOT NULL AND @BORROWERNUMBER IS NOT NULL;

INSERT INTO reserves (borrowernumber, reservedate, biblionumber, branchcode,  reservenotes, priority, found, timestamp, itemnumber, expirationdate)
   SELECT @BORROWERNUMBER, [% reservedate %], @BIBLIONUMBER, [% pickbranch %], [% reservenotes %], [% priority %], (@FOUND := IF(@ITEMNUMBER IS NULL, NULL, [% found %])), [% timestamp %], @ITEMNUMBER, [% expirationdate %]
   FROM DUAL WHERE @INSERT_RESERVE;

SELECT 'NOT INSERTING titleno: ', [% titleno %], ' biblionumber: ', @BIBLIONUMBER, ' borrowernumber: ', @BORROWERNUMBER, ' found: ', @FOUND, ' ITEMNUMBER: ', @ITEMNUMBER FROM DUAL WHERE NOT @INSERT_RESERVE;

INSERT INTO k_reservations_idmap (original_id, reserve_id, batch)
  SELECT [% original_reservation_id %], LAST_INSERT_ID(), [% batch %] FROM DUAL
  WHERE @INSERT_RESERVE;

SET @BIBLIONUMBER = IF(@BIBLIONUMBER IS NULL AND @ITEMNUMBER IS NOT NULL, (SELECT biblionumber FROM items WHERE itemnumber = @ITEMNUMBER), @BIBLIONUMBER);

INSERT INTO tmp_holdsqueue (biblionumber, itemnumber, barcode, surname, firstname, phone, borrowernumber, cardnumber, reservedate, title, itemcallnumber, holdingbranch, pickbranch, notes, item_level_request)
SELECT @BIBLIONUMBER, @ITEMNUMBER, [% item_barcode %], (SELECT surname FROM borrowers WHERE borrowernumber = @BORROWERNUMBER), (SELECT firstname FROM borrowers WHERE borrowernumber = @BORROWERNUMBER), (SELECT phone FROM borrowers WHERE borrowernumber = @BORROWERNUMBER), @BORROWERNUMBER, [% borrower_barcode %], [% reservedate %], [% title %], @ITEMCALLNUMBER, [% holdingbranch %], [% pickbranch %], '', IF([% found %] = 'W' OR [% found %] = 'T', 1, 0)
FROM DUAL
WHERE @ITEMNUMBER IS NOT NULL AND NOT @ALREADYRESERVED AND @BORROWERNUMBER IS NOT NULL;

INSERT INTO hold_fill_targets (borrowernumber, biblionumber, itemnumber, source_branchcode, item_level_request)
SELECT @BORROWERNUMBER, @BIBLIONUMBER, @ITEMNUMBER, [% holdingbranch %], IF([% found %] = 'W' OR [% found %]  = 'T', 1, 0)
FROM DUAL
WHERE @ITEMNUMBER IS NOT NULL AND NOT @ALREADYRESERVED AND @BORROWERNUMBER IS NOT NULL;

SELECT 'Exemplar redan reserverat', 'LÃ¥ntagare kortnummer', 'Bibliografisk post' FROM DUAL WHERE @ALREADYRESERVED UNION
SELECT @ITEMNUMBER, [% borrower_barcode %], @BIBLIONUMBER FROM DUAL WHERE @ALREADYRESERVED;

COMMIT;