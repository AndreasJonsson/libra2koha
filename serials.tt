
SET @BIBLIONUMBER = NULL;

SELECT biblionumber FROM
(
 SELECT biblionumber FROM k_biblio_identification
 WHERE CONCAT(IFNULL(marc003, ''), marc001) = [% titleno %]
UNION
 SELECT biblionumber FROM k_merged_records
 WHERE CONCAT(IFNULL(marc003, ''), marc001) = [% titleno %]
) AS T LIMIT 1 INTO @BIBLIONUMBER;

SELECT @BIBLIONUMBER IS NOT NULL AND (@PREVBIBLIONUMBER IS NULL OR @BIBLIONUMBER != @PREVBIBLIONUMBER) INTO @CREATE_NEW_SUBSCRIPTION;
SELECT IFNULL(@BIBLIONUMBER, @PREVBIBLIONUMBER) INTO @PREVBIBLIONUMBER;

INSERT INTO subscription (biblionumber, serialsadditems, branchcode) SELECT @BIBLIONUMBER, 1, [% branchcode_str %] FROM DUAL WHERE @CREATE_NEW_SUBSCRIPTION;
SELECT IF (@CREATE_NEW_SUBSCRIPTION, CONVERT(LAST_INSERT_ID(), CHAR), @SUBSCRIPTIONID) INTO @SUBSCRIPTIONID;

INSERT INTO serial  ( biblionumber,       subscriptionid,    serialseq,       serialseq_x,       serialseq_y,       status,       planneddate,           publisheddate)
       SELECT        @BIBLIONUMBER,      @SUBSCRIPTIONID, [% serialseq %], [% serialseq_x %], [% serialseq_y %], [% status %], [% planneddate_str %], [% publisheddate_str %]
FROM DUAL
WHERE @BIBLIONUMBER IS NOT NULL;


SELECT IF (@BIBLIONUMBER IS NOT NULL, LAST_INSERT_ID(), @SERIALID) INTO @SERIALID;

[% FOREACH original_id IN original_ids -%]
  INSERT INTO `serialitems` (`itemnumber`, `serialid`) SELECT itemnumber,  @SERIALID FROM k_items_idmap WHERE @BIBLIONUMBER IS NOT NULL AND original_id = [% original_id %];
[% END -%]

