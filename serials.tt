
SET @BIBLIONUMBER = NULL;

SELECT bi.biblionumber
FROM biblioitems AS bi JOIN k_biblio_identification AS id USING(biblionumber) LEFT OUTER JOIN k_merged_records as m USING (biblionumber)  WHERE CONCAT(IFNULL(id.marc003, ''), id.marc001) = [% titleno %] OR CONCAT(IFNULL(m.marc003, ''), m.marc001) = [% titleno %] LIMIT 1 INTO @BIBLIONUMBER;

SELECT @BIBLIONUMBER IS NOT NULL AND (@PREVBIBLIONUMBER IS NULL OR @BIBLIONUMBER != @PREVBIBLIONUMBER) INTO @CREATE_NEW_SUBSCRIPTION;
SELECT IFNULL(@BIBLIONUMBER, @PREVBIBLIONUMBER) INTO @PREVBIBLIONUMBER;

INSERT INTO subscription (biblionumber, serialsadditems, branchcode) SELECT @BIBLIONUMBER, 1, [% branchcode_str %] FROM DUAL WHERE @CREATE_NEW_SUBSCRIPTION;
SELECT IF (@CREATE_NEW_SUBSCRIPTION, CONVERT(LAST_INSERT_ID(), CHAR), @SUBSCRIPTIONID) INTO @SUBSCRIPTIONID;

INSERT INTO serial  ( biblionumber,       subscriptionid,    serialseq,       serialseq_x,       serialseq_y,       status,       planneddate,           publisheddate)
       SELECT        @BIBLIONUMBER,      @SUBSCRIPTIONID, [% serialseq %], [% serialseq_x %], [% serialseq_y %], [% status %], [% planneddate_str %], [% publisheddate_str %]
FROM DUAL
WHERE @BIBLIONUMBER IS NOT NULL;


SELECT IF (@BIBLIONUMBER IS NOT NULL, LAST_INSERT_ID(), @SERIALID) INTO @SERIALID;

[% FOREACH barcode IN barcodes -%]
  INSERT INTO `serialitems` (`itemnumber`, `serialid`) SELECT itemnumber,  @SERIALID FROM items WHERE @BIBLIONUMBER IS NOT NULL AND barcode = [% barcode %];
[% END -%]

